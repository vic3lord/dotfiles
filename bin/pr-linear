#!/usr/bin/env bash
# vim: ft=bash

readonly SEMANTIC=$(echo -e 'feat\nchore\nfix' | fzf --no-multi -1 --exit-0)
readonly ISSUE=$(
	jq -cn '{query: $query}' \
	--arg query '
	query AssignedIssues {
	  issues(filter: { 
	    assignee: {isMe: {eq: true}}
	    state: {type: {neqIgnoreCase: "completed"}}
	  }) {
	    nodes {
	      branchName
	      title
	    }
	  }
	}' \
	| curl \
	    --silent \
	    -XPOST \
	    -H "Content-Type: application/json" \
	    -H "Authorization: $LINEAR_TOKEN" \
	    --data @- \
	    https://api.linear.app/graphql \
	    | jq -r '.data.issues.nodes[] | "\(.branchName): \(.title)"' \
	    | fzf --query="$1" --no-multi --select-1 --exit-0
)

if [[ -z $ISSUE ]]; then
	exit 0
fi

readonly ISSUE_BRANCH="$(echo $ISSUE | awk -F': ' '{print $1}')"
readonly ISSUE_TITLE="$(echo $ISSUE | awk -F': ' '{print $2}')"

if git branch | grep $ISSUE_BRANCH
then
	echo "Already exists, switching!"
	git switch $ISSUE_BRANCH
	exit 0
fi

git checkout -b $ISSUE_BRANCH
git commit --allow-empty -m "$ISSUE_TITLE"

gh pr create \
	--assignee @me \
	--draft \
	--fill \
	--title "$SEMANTIC: $ISSUE_TITLE"
